{"version":3,"sources":["components/Navbar.js","components/Textform.js","components/Alert.js","App.js","reportWebVitals.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","concat","mode","appearance","href","title","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","about","style","backgroundColor","htmlFor","onClick","toggleMode","color","info","Textform","_useState","useState","_useState2","Object","slicedToArray","text","setText","Fragment","heading","onChange","event","target","value","rows","newText","toUpperCase","showAlert","toLowerCase","reverseText","split","reverse","join","length","alert","word","role","charAt","slice","msg","defaultProps","App","setAlert","_useState3","_useState4","setMode","message","setTimeout","document","body","Alert_alert","reportWebVitals","onPerfEntry","Function","__webpack_require__","e","then","bind","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","getElementById","render","StrictMode","src_App"],"mappings":"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","file":"static/js/main.1d5090b7.chunk.js","sourcesContent":["import React from \"react\";\r\nimport PropTypes from \"prop-types\";\r\n// import { Link } from \"react-router-dom\";\r\n\r\nexport default function Navbar(props) {\r\n\treturn (\r\n\t\t<nav\r\n\t\t\tclassName={`navbar navbar-expand-lg navbar-${props.mode.appearance} bg-${props.mode.appearance}`}\r\n\t\t>\r\n\t\t\t<a className=\"navbar-brand\" href=\"/\">\r\n\t\t\t\t{props.title}\r\n\t\t\t</a>\r\n\t\t\t<button\r\n\t\t\t\tclassName=\"navbar-toggler\"\r\n\t\t\t\ttype=\"button\"\r\n\t\t\t\tdata-toggle=\"collapse\"\r\n\t\t\t\tdata-target=\"#navbarSupportedContent\"\r\n\t\t\t\taria-controls=\"navbarSupportedContent\"\r\n\t\t\t\taria-expanded=\"false\"\r\n\t\t\t\taria-label=\"Toggle navigation\"\r\n\t\t\t>\r\n\t\t\t\t<span className=\"navbar-toggler-icon\"></span>\r\n\t\t\t</button>\r\n\t\t\t<div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n\t\t\t\t<ul className=\"navbar-nav mr-auto\">\r\n\t\t\t\t\t<li className=\"nav-item active\">\r\n\t\t\t\t\t\t<a className=\"nav-link\" href=\"/\">\r\n\t\t\t\t\t\t\tHome <span className=\"sr-only\">(current)</span>\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t\t<li className=\"nav-item\">\r\n\t\t\t\t\t\t<a className=\"nav-link\" href=\"/\">\r\n\t\t\t\t\t\t\t{props.about}\r\n\t\t\t\t\t\t</a>\r\n\t\t\t\t\t</li>\r\n\t\t\t\t</ul>\r\n\t\t\t\t<div className=\"custom-control custom-switch\">\r\n\t\t\t\t\t<input\r\n\t\t\t\t\t\ttype=\"checkbox\"\r\n\t\t\t\t\t\tclassName=\"custom-control-input\"\r\n\t\t\t\t\t\tid=\"customSwitch1\"\r\n\t\t\t\t\t\tstyle={{backgroundColor:props.mode.appearance === \"dark\"?\"purple\":\"white\"}}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label\r\n\t\t\t\t\t\tclassName=\"custom-control-label\"\r\n\t\t\t\t\t\thtmlFor=\"customSwitch1\"\r\n\t\t\t\t\t\tonClick={props.toggleMode}\r\n\t\t\t\t\t\tstyle = {{color: props.mode.appearance === \"dark\"?\"white\":\"black\"}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t{props.mode.info}\r\n\t\t\t\t\t</label>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\t\t</nav>\r\n\t);\r\n}\r\n\r\n//only accept string in title and about\r\nNavbar.propTypes = {\r\n\ttitle: PropTypes.string,\r\n\tabout: PropTypes.string,\r\n};\r\n\r\n// sets default props if no props are sent\r\nNavbar.defaultProps = {\r\n\ttitle: \"Set title here\",\r\n\tabout: \"set about\",\r\n};\r\n","import React, { useState } from \"react\";\r\n\r\nexport default function Textform(props) {\r\n\t// change of state using hooks\r\n\tconst [text, setText] = useState(\"Enter text here\");\r\n\r\n\tconst handleUpClick = () => {\r\n\t\t// setText(\"clicked on upclick\");\r\n\t\tlet newText = text.toUpperCase();\r\n\t\tsetText(newText);\r\n\t\tprops.showAlert(\"Converted to Uppercase\", \"success \");\r\n\t};\r\n\tconst handleLowClick = () => {\r\n\t\tlet newText = text.toLowerCase();\r\n\t\tsetText(newText);\r\n\t\tprops.showAlert(\"Converted to Lowercase\", \"success \");\r\n\t};\r\n\tconst handleResetClick = () => {\r\n\t\tsetText(\"\");\r\n\t};\r\n\r\n\tconst handleReverse = () => {\r\n\t\tlet reverseText = text.split(\"\").reverse().join(\"\");\r\n\t\tsetText(reverseText);\r\n\t\tprops.showAlert(\"Text is reversed\", \"success \");\r\n\t};\r\n\r\n\t// required to make write on input on change\r\n\tconst handleOnChange = (event) => {\r\n\t\tsetText(event.target.value);\r\n\t};\r\n\r\n\treturn (\r\n\t\t<>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"container my-2\"\r\n\t\t\t\tstyle={{ color: props.mode.appearance === \"dark\" ? \"white\" : \"black\" }}\r\n\t\t\t>\r\n\t\t\t\t<div className=\"form-group\">\r\n\t\t\t\t\t<label htmlFor=\"myBox\">\r\n\t\t\t\t\t\t<h2>{props.heading}</h2>\r\n\t\t\t\t\t</label>\r\n\t\t\t\t\t<textarea\r\n\t\t\t\t\t\tclassName=\"form-control\"\r\n\t\t\t\t\t\tonChange={handleOnChange}\r\n\t\t\t\t\t\tvalue={text}\r\n\t\t\t\t\t\tid=\"myBox\"\r\n\t\t\t\t\t\trows=\"8\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tcolor: props.mode.appearance === \"dark\" ? \"white\" : \"black\",\r\n\t\t\t\t\t\t\tbackgroundColor:\r\n\t\t\t\t\t\t\t\tprops.mode.appearance === \"dark\" ? \"grey\" : \"white\",\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t></textarea>\r\n\t\t\t\t</div>\r\n\t\t\t\t<button className=\"btn btn-primary mx-2\" onClick={handleUpClick}>\r\n\t\t\t\t\tConvert to Uppercase\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn btn-primary mx-2 my-2\" onClick={handleLowClick}>\r\n\t\t\t\t\tConvert to Lowercase\r\n\t\t\t\t</button>\r\n\t\t\t\t<button className=\"btn btn-primary\" onClick={handleReverse}>\r\n\t\t\t\t\tReverse text\r\n\t\t\t\t</button>\r\n\t\t\t\t<button\r\n\t\t\t\t\tclassName=\"btn btn-secondary mx-2 my-2\"\r\n\t\t\t\t\tonClick={handleResetClick}\r\n\t\t\t\t>\r\n\t\t\t\t\tReset text area\r\n\t\t\t\t</button>\r\n\t\t\t</div>\r\n\t\t\t<div\r\n\t\t\t\tclassName=\"container my-4\"\r\n\t\t\t\tstyle={{ color: props.mode.appearance === \"dark\" ? \"white\" : \"black\" }}\r\n\t\t\t>\r\n\t\t\t\t<h2>Your text summary</h2>\r\n\t\t\t\t<p>\r\n\t\t\t\t\t{text.split(\" \").length} words and {text.length} characters\r\n\t\t\t\t</p>\r\n\t\t\t\t<p>{0.008 * text.split(\" \").length} Minutes to read</p>\r\n\t\t\t\t<h2>Preview</h2>\r\n\t\t\t\t<p>{text.length > 0 ? text : \"Enter in textarea to preview\"}</p>\r\n\t\t\t</div>\r\n\t\t</>\r\n\t);\r\n}\r\n","import React from \"react\";\r\n\r\nexport default function alert(props) {\r\n\tconst capitalize = (word) => {\r\n\t\tlet initialLetter = word.charAt(0);\r\n\t\treturn initialLetter.toUpperCase() + word.slice(1);\r\n\t};\r\n\treturn (\r\n\t\tprops.alert && (\r\n\t\t\t<div\r\n\t\t\t\tclassName={`alert alert-${props.alert.type} alert-dismissible fade show`}\r\n\t\t\t\trole=\"alert\"\r\n\t\t\t>\r\n\t\t\t\t<strong>{capitalize(props.alert.type)}</strong>\r\n\t\t\t\t{props.alert.msg}\r\n\t\t\t</div>\r\n\t\t)\r\n\t);\r\n}\r\n","import React, { useState } from \"react\";\nimport \"./App.css\";\n// import About from \"./components/About\";\nimport Navbar from \"./components/Navbar\";\nimport Textform from \"./components/Textform\";\nimport Alert from \"./components/Alert\";\n// import { BrowserRouter as Router, Routes, Route } from \"react-router-dom\";\n\nfunction App() {\n\t// alert usestate\n\tconst [alert, setAlert] = useState(null);\n\t// mode useState\n\tconst [mode, setMode] = useState({\n\t\tappearance: \"light\",\n\t\tinfo: \"Enable dark mode\",\n\t});\n\n\tconst toggleMode = () => {\n\t\tif (mode.appearance === \"light\") {\n\t\t\tsetMode({\n\t\t\t\tappearance: \"dark\",\n\t\t\t\tinfo: \"Disable dark mode\",\n\t\t\t});\n\t\t\tshowAlert(\"Dark mode has been enabled\", \"success \");\n\t\t\tdocument.body.style.backgroundColor = \"#51557E\";\n\t\t} else {\n\t\t\tsetMode({\n\t\t\t\tappearance: \"light\",\n\t\t\t\tinfo: \"Enable dark mode\",\n\t\t\t});\n\t\t\tshowAlert(\"Light mode has been enabled\", \"success \");\n\t\t\tdocument.body.style.backgroundColor = \"white\";\n\t\t}\n\t};\n\n\tconst showAlert = (message, type) => {\n\t\tsetAlert({\n\t\t\tmsg: message,\n\t\t\ttype: type,\n\t\t});\n\t\tsetTimeout(() => {\n\t\t\tsetAlert(null);\n\t\t}, 1250);\n\t};\n\treturn (\n\t\t<>\n\t\t\t<Navbar\n\t\t\t\ttitle=\"TextUtils\"\n\t\t\t\tabout=\"About TextUtils\"\n\t\t\t\tmode={mode}\n\t\t\t\ttoggleMode={toggleMode}\n\t\t\t/>\n\t\t\t<Alert alert={alert} />\n\n\t\t\t<Textform\n\t\t\t\theading=\"Enter the text to analyze\"\n\t\t\t\tmode={mode}\n\t\t\t\tshowAlert={showAlert}\n\t\t\t/>\n\t\t</>\n\t);\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}